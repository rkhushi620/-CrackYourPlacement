class Solution {
    public String removeDuplicates(String s, int k) {
         Stack<Pair<Character, Integer>> st = new Stack<>();
        for (int i = 0; i < s.length(); i++) {
            char currentChar = s.charAt(i);
            if (!st.isEmpty() && st.peek().getKey() == currentChar) {
                Pair<Character, Integer> top = st.pop();
                st.push(new Pair<>(top.getKey(), top.getValue() + 1));
            } else {
                st.push(new Pair<>(currentChar, 1));
            }

            if (st.peek().getValue() == k) {
                st.pop();
            }
        }

        StringBuilder str = new StringBuilder();
        while (!st.isEmpty()) {
            Pair<Character, Integer> top = st.pop();
            for (int j = 0; j < top.getValue(); j++) {
                str.insert(0, top.getKey());
            }
        }
        return str.toString();
    }
}
